def propertiesFile = new File('sdk/gradle.properties')

if (!propertiesFile.exists()) {
    propertiesFile.createNewFile()
    propertiesFile << new File('./gradle.properties.template').text
}

apply plugin: 'com.android.library'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply from: 'maven-push.gradle'

def packageName = project.GROUP
def libraryVersion = project.VERSION_NAME

android {
  compileSdkVersion 27
  buildToolsVersion "28.0.3"

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  defaultConfig {
    minSdkVersion 19
    targetSdkVersion 27
    versionCode VERSION_CODE.toInteger()
    versionName libraryVersion

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    javaCompileOptions {
      annotationProcessorOptions {
        includeCompileClasspath = true
      }
    }
  }
  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable 'InvalidPackage', 'SetJavaScriptEnabled'
  }
}

pmd {
  toolVersion = '5.5.2'
}

findbugs {
  toolVersion = "3.0.1"
}

checkstyle {
  toolVersion = '7.3'
}

task findbugs(type: FindBugs) {
  excludeFilter file('config/findbugs/exclude.xml')
  classes = files("$project.buildDir/intermediates/classes")
  source = fileTree('src/main/java')
  classpath = files()
  effort = 'max'
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

task pmd(type: Pmd) {
  ruleSets = ["java-android",
              "java-basic",
              "java-braces",
              "java-strings",
              "java-unnecessary",
              "java-unusedcode",
              "java-sunsecure"]
  source = fileTree('src/main/java')
}

task checkstyle(type: Checkstyle) {
  configFile file('config/checkstyle/checkstyle.xml')
  source 'src/main/java'
  include '**/*.java'
  classpath = files()
}

task findbugsWrapper(dependsOn: 'findbugs') {}
task pmdWrapper(dependsOn: 'pmd') {}
task checkstyleWrapper(dependsOn: 'checkstyle') {}

//build.dependsOn findbugsWrapper
check.dependsOn pmdWrapper
check.dependsOn checkstyleWrapper

dependencies {

  api "com.android.support:appcompat-v7:$ANDROID_SUPPORT_VERSION"

  api "com.squareup.okhttp3:okhttp:$OK_HTTP_VERSION"
  api "com.google.code.gson:gson:$GSON_VERSION"

  annotationProcessor "com.ryanharter.auto.value:auto-value-gson:$AUTOVALUE_VERSION"
  compileOnly "com.ryanharter.auto.value:auto-value-gson:$AUTOVALUE_VERSION"
  annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:0.2.5"

  testImplementation 'com.google.truth:truth:0.28'
  testImplementation 'junit:junit:4.12'
  testImplementation 'org.robolectric:robolectric:3.5.1'
  testImplementation 'org.mockito:mockito-core:2.21.0'
  testImplementation "com.squareup.okhttp3:okhttp:$OK_HTTP_VERSION"
  testImplementation "com.google.code.gson:gson:$GSON_VERSION"
  testImplementation "com.squareup.okhttp3:mockwebserver:$OK_HTTP_VERSION"
}